{"./":{"url":"./","title":"前言","keywords":"","body":"前言 2020年的春节期间，在新型肺炎病毒肆虐的时候，春节假期延长。百无聊赖之下，无意中看到一个很有趣的开源软件，那就是gitbook了，并且学会了使用gitbook发布制作自己的第一本电子书。我就总有一个冲动，想制作一本自己的书籍，可是写什么好呢？ 心中思考着，不如，好好总结总结以前学到的知识吧，所以我就以java相关的知识，对自己的知识体系进行梳理，以及想入门的朋友们更好的讲解同时也能梳理自己所学到的东西。个人水平有限，书中如有纰漏之处，敬请谅解。同时联系本人，予以修缮。谢谢！ djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-30 11:51:05 "},"base/":{"url":"base/","title":"基础篇","keywords":"","body":"基础篇 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:50:42 "},"base/base.html":{"url":"base/base.html","title":"计算机基础知识","keywords":"","body":"计算机基础知识 你为什么学计算机？ 我们在做每一件事情之前，都是有动机的。你学习计算机，学习编程的动机是什么？ 老实说，我一开始想做编程，是因为我想过懒人的生活，想着一天起床，有机器人叫我醒来，帮我做好早餐，各种高科技机器人的智能生活，那还是我读小学的时候幻想出来的。后来，钢铁侠电影出现了，将我的梦想以电影的形式实现出来，我真的太想有那种生活了，后来毕业了。慢慢了解到，我要实现的那种生活方式，是一个叫做智能家居的东西。可是智能家居是一整套软硬件结合的东西，我当时很迷茫，什么都去学，可是到头来，找工作面试处处碰壁。我知道，我心思太多，10个桶，每个桶都只有5%的水。有人也善意的告诉我，要专注。可是我一直没有学会如何专注。或许写书，能让我的思维稍微专注点吧。 刚刚想到一件事情，专注和发散之间的关系。如果太过专注就很容易自己陷入思维的死胡同，太过发散，就干不好每一件事情。要学会适度平衡才可以了。 好了，总之我学编程，是为了过懒人生活，我很懒，也是我学习的动机！ 什么是计算机语言？ 计算机也是有语言的。首先我们知道，最底层的计算机，也就是电路板，它没有我们想象的那么聪明，它只认识高电平，低电平（也就是电灯开和关的意思）。刚开始计算机发明出来的时候是用纸带进行编程的 “古代”的程序就是一条条纸带，在上面打孔，然后再交给计算机去处理，当时有一个古老的设备叫做“打孔卡（Punched Card）”。所以当时编程是极其枯燥和乏味，而且很容易出错。一旦一个位置打错了，整条纸带都不能用重新打过。感觉特别考验程序员的想象力，要把程序想好再去打（貌似那时候还没有不是叫程序员）。人们在特定的位置上打洞或者不打洞，来代表“0”或者“1”。所以计算机底层都是一串串0和1在执行。 下面是打孔卡的照片⬇ 看到上面有FORTRAN字样，不知道是不是和FORTRAN语言有关系 🤔。 言归正传，计算机语言到最后翻译成0或者1（这些东西就是机器码），然后丢给cpu执行。我们现在每天使用的高级语言是对人类友好的，计算机压根不懂这些。所以什么是计算机语言？就是给人看得懂，计算机看不懂，然后能够执行的时候翻译成一串串0或者1给计算机执行方式。这个过程可以这样表示 graph LR id1[高级语言]==编译==>id2[低级语言] id2[低级语言]==汇编==>id3[机器码] 什么是汇编？ 严格的说是 将 汇编语言源程序 转换成 机器语言程序 的过程。 那么是谁将计算机语言（低级语言）翻译成机器码呢？ 那就是编译器啦 很古老的一个语言，C语言就是一种高级语言，C语言通过gcc编译器就能编译汇编出机器码执行。 但是我们这里的主角不是C语言，是java，所以省略。。。。。 而我为什么提C语言呢?且看下章java基础。 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-30 20:35:36 "},"base/commonsense.html":{"url":"base/commonsense.html","title":"java基础","keywords":"","body":"java基础 因为java的底层是用C语言和汇编语言进行实现的。所以java程序编译后生成的并不是机器码，而是字节码，字节码是一种和任何具体机器环境及操作系统环境无关的中间代码，这段代码被java虚拟机（叫做jvm的程序）进行解释成对应平台的机器码，然后执行。所以，java有一个特点：“一次编写，到处运行”。 一次编写到处运行的好处 因为java语言的这种方式，所以有效地解决了大多数高级程序设计语言需要针对不同系统来编译产生不同机器代码的问题，即硬件环境和操作平台的异构问题，大大降低了程序开发、维护和管理的开销。 环境的搭建 下载jdk 下载地址：https://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html 点击下载按钮： 开始安装JDK： 可以设置为你想安装的路径。 环境变量配置 1. 打开 环境变量窗口 右键 This PC(此电脑) -> Properties（属性） -> Advanced system settings（高级系统设置） -> Environment Variables（环境变量）... 2. 新建JAVA_HOME 变量点击 New（新建）... 按钮 输入: 变量名：JAVA_HOME 变量值：电脑上JDK安装的绝对路径 输入完毕后点击 OK。 JDK 路径下必须能够看到如下的文件。 3. 新建/修改 CLASSPATH 变量 如果存在 CLASSPATH 变量，选中点击 Edit(编辑)。 如果没有，点击 New（新建）... 新建。 输入/在已有的变量值后面添加： 变量名：CLASSPATH 变量值：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; 点击 OK 保存。 4. 修改Path 变量 由于 win10 的不同，当选中 Path 变量的时候，系统会很方便的把所有不同路径都分开了，不会像 win7 或者 win8 那样连在一起。 新建两条路径： %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin 5. 检查 打开 cmd，输入 java，出现一连串的指令提示，说明配置成功了: 第一个java程序 jlsdjf djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-30 20:42:23 "},"base/constant.html":{"url":"base/constant.html","title":"常量","keywords":"","body":"常量 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:48:29 "},"base/type.html":{"url":"base/type.html","title":"数据类型","keywords":"","body":"数据类型 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:48:29 "},"base/operator.html":{"url":"base/operator.html","title":"运算符","keywords":"","body":"运算符 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:48:29 "},"base/construct.html":{"url":"base/construct.html","title":"结构语句","keywords":"","body":"结构语句 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:48:29 "},"base/method.html":{"url":"base/method.html","title":"函数","keywords":"","body":"函数 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:48:29 "},"base/array.html":{"url":"base/array.html","title":"数组","keywords":"","body":"数组 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 16:48:29 "},"two/":{"url":"two/","title":"晋级篇","keywords":"","body":"晋级篇 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 17:20:00 "},"two/set.html":{"url":"two/set.html","title":"集合","keywords":"","body":"集合 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 17:22:01 "},"base/object.html":{"url":"base/object.html","title":"面向对象","keywords":"","body":"面向对象 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 17:20:00 "},"three/":{"url":"three/","title":"高级篇","keywords":"","body":"高级篇 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 17:25:58 "},"tools/":{"url":"tools/","title":"工具篇","keywords":"","body":"工具篇 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 17:25:58 "},"more/READEME.html":{"url":"more/READEME.html","title":"题外话","keywords":"","body":"题外话 djs所有 all right reserved，powered by Gitbook该文章修订时间： 2020-01-28 17:25:58 "}}